//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Telephone_Sensor_Application.SensorDataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorDataItem", Namespace="http://schemas.datacontract.org/2004/07/TelephoneSensorService")]
    [System.SerializableAttribute()]
    public partial class SensorDataItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Z {
            get {
                return this.ZField;
            }
            set {
                if ((this.ZField.Equals(value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SensorDataService.ISensorDataService1")]
    public interface ISensorDataService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISensorDataService1/DoWork", ReplyAction="http://tempuri.org/ISensorDataService1/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISensorDataService1/DoWork", ReplyAction="http://tempuri.org/ISensorDataService1/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISensorDataService1/TryDeque", ReplyAction="http://tempuri.org/ISensorDataService1/TryDequeResponse")]
        Telephone_Sensor_Application.SensorDataService.SensorDataItem[] TryDeque();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISensorDataService1/TryDeque", ReplyAction="http://tempuri.org/ISensorDataService1/TryDequeResponse")]
        System.Threading.Tasks.Task<Telephone_Sensor_Application.SensorDataService.SensorDataItem[]> TryDequeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISensorDataService1/ClearSensorDataQueue", ReplyAction="http://tempuri.org/ISensorDataService1/ClearSensorDataQueueResponse")]
        void ClearSensorDataQueue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISensorDataService1/ClearSensorDataQueue", ReplyAction="http://tempuri.org/ISensorDataService1/ClearSensorDataQueueResponse")]
        System.Threading.Tasks.Task ClearSensorDataQueueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISensorDataService1/getSensorsType", ReplyAction="http://tempuri.org/ISensorDataService1/getSensorsTypeResponse")]
        string getSensorsType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISensorDataService1/getSensorsType", ReplyAction="http://tempuri.org/ISensorDataService1/getSensorsTypeResponse")]
        System.Threading.Tasks.Task<string> getSensorsTypeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISensorDataService1Channel : Telephone_Sensor_Application.SensorDataService.ISensorDataService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SensorDataService1Client : System.ServiceModel.ClientBase<Telephone_Sensor_Application.SensorDataService.ISensorDataService1>, Telephone_Sensor_Application.SensorDataService.ISensorDataService1 {
        
        public SensorDataService1Client() {
        }
        
        public SensorDataService1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SensorDataService1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SensorDataService1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SensorDataService1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public Telephone_Sensor_Application.SensorDataService.SensorDataItem[] TryDeque() {
            return base.Channel.TryDeque();
        }
        
        public System.Threading.Tasks.Task<Telephone_Sensor_Application.SensorDataService.SensorDataItem[]> TryDequeAsync() {
            return base.Channel.TryDequeAsync();
        }
        
        public void ClearSensorDataQueue() {
            base.Channel.ClearSensorDataQueue();
        }
        
        public System.Threading.Tasks.Task ClearSensorDataQueueAsync() {
            return base.Channel.ClearSensorDataQueueAsync();
        }
        
        public string getSensorsType() {
            return base.Channel.getSensorsType();
        }
        
        public System.Threading.Tasks.Task<string> getSensorsTypeAsync() {
            return base.Channel.getSensorsTypeAsync();
        }
    }
}
